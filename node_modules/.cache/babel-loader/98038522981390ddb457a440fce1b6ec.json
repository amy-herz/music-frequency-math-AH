{"ast":null,"code":"var _jsxFileName = \"/Users/amy/job search career/coding challenges/Go Nimbly 2020/interviewProject_FrequencyMath/frequency-math/src/App.js\";\nimport React, { Component } from 'react'; //import ReactDOM from 'react-dom';\n\nimport 'bootswatch/dist/solar/bootstrap.min.css';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    /*  TODO: implement a loading spinner\n    if(!this.props.title) {\n      return(null);\n    }\n    */\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"page-header\",\n      id: \"banner\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 11\n      }\n    }, \"Note Frequency Math\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 11\n      }\n    }, \"Go Nimbly Interview Project by Amy Herz\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"jumbotron\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(BaseInput, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(SemitonesForm, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }\n    }))));\n  }\n\n}\n/*  \n  Starting with a base of A4 with a nice integer note frequency of 440.\n  This frequency will remain unchanged as our point of reference.\n*/\n\n\nfunction BaseInput(props) {\n  const base = {\n    freq: \"440\",\n    note: \"A4\"\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"fieldset\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"control-label\",\n    for: \"baseFrequency\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, \"Base Frequency (in Hertz)\"), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"form-control form-control-lg\",\n    type: \"number\",\n    placeholder: \"440\",\n    id: \"baseFrequency\",\n    readOnly: true,\n    value: \"440\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"small\", {\n    id: \"baseFreqHelp\",\n    className: \"form-text text-muted\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, \"We are starting with the \\\"Middle A\\\" (A4) with a frequency of 440Hz\")));\n}\n/*\n  Simple function to set state of other class and pass to results\n*/\n\n\nfunction updateResults(freq) {\n  this.setState({\n    freq\n  });\n}\n/*  \n  From our base note, user provides number of semitones, or half steps to travel from there.\n  User can input positive number to travel up or negative number to travel down in pitch.\n*/\n\n\nclass SemitonesForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      number: 0,\n      // user inputted number of semitones\n      frequency: 440,\n      // frequency of resulting note\n      logResult: 0,\n      // result of log newton API call\n      pianoKey: 49,\n      // key number on piano\n      isLoading: false,\n      // true/false if component is loading\n      error: null,\n      // in case there is an error to display\n      displayResults: false // render when results are ready\n\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this); //this.calculateFrequency = this.calculateFrequency.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({\n      number: event.target.value\n    });\n  }\n  /*\n  calculateFrequency() {\n    console.log('current state.number entering freq calc:' + this.state.number);\n    this.setState({frequency: 440 * Math.pow(2, (this.state.number / 12))});\n  }\n  */\n\n\n  handleSubmit(event) {\n    this.setState({\n      isLoading: true\n    }); //this.calculateFrequency();\n\n    console.log('current state.number entering freq calc:' + this.state.number); //this.setState({frequency: 440 * Math.pow(2, (this.state.number / 12))});\n\n    const freq = 440 * Math.pow(2, this.state.number / 12); // additional step to round to two decimal places for readability\n\n    const freqRounded = Number(Math.round(parseFloat(freq + 'e' + 2)) + 'e-' + 2);\n    this.setState({\n      frequency: freqRounded\n    });\n    console.log('this.state.frequency: ' + this.state.frequency);\n    const freqDivide = freq / 440;\n    console.log('freqDivide: ' + freqDivide);\n    const newtonBase = 'https://newton.now.sh/'; // base url for newton API calls\n\n    fetch(newtonBase + 'log/2|' + freqDivide).then(response => {\n      if (response.ok) {\n        return response.json();\n      } else {\n        throw new Error('Something went wrong...');\n      }\n    }).then(logResults => {\n      this.setState({\n        logResult: logResults.result\n      });\n      console.log('log result: ', logResults);\n      console.log('this.state.logResult: ' + this.state.logResult);\n      const key = 12 * this.state.logResult + 49;\n      this.setState({\n        pianoKey: key,\n        isLoading: false,\n        displayResults: true\n      });\n      console.log('this.pianoKey: ' + this.state.pianoKey);\n    }, error => {\n      console.log(error); //console.log('error response: ' + error.response);\n\n      console.log('error status: ' + error.response.status);\n      this.setState({\n        error,\n        isLoading: false,\n        displayResults: false\n      });\n    });\n    event.preventDefault();\n  }\n  /*\n  passToResults(event) {\n    updateResults(event.target.value);\n  }\n  */\n\n\n  render() {\n    const {\n      isLoading,\n      error,\n      displayResults\n    } = this.state;\n\n    if (error) {\n      return /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 14\n        }\n      }, error.message);\n    }\n\n    if (isLoading) {\n      return /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 14\n        }\n      }, \"Loading...\");\n    }\n\n    if (displayResults) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        className: \"col-form-label col-form-label-lg\",\n        for: \"userInput\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 13\n        }\n      }, \"Semitones\", /*#__PURE__*/React.createElement(\"input\", {\n        className: \"form-control form-control-lg\",\n        type: \"number\",\n        placeholder: \"0\",\n        id: \"userInput\",\n        min: \"-57\",\n        max: \"50\",\n        step: \"1\",\n        value: this.state.number,\n        onChange: this.handleChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 15\n        }\n      })), /*#__PURE__*/React.createElement(\"small\", {\n        id: \"semitonesHelp\",\n        className: \"form-text text-muted\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 13\n        }\n      }, \"Enter how many semitones, or half steps you would like to add or subtract from A4 (integer numbers only ranging from -57 to 50).\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"submit\",\n        className: \"btn btn-primary btn-lg btn-block\",\n        value: \"Calculate\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 13\n        }\n      }))), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        class: \"card text-white bg-success mb-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        div: true,\n        class: \"card-header\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }\n      }, \"Results\"), /*#__PURE__*/React.createElement(\"div\", {\n        class: \"card-body\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        class: \"card-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 13\n        }\n      }, \"Consonance/Dissonance?\"), /*#__PURE__*/React.createElement(\"p\", {\n        class: \"card-text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 13\n        }\n      }, \"After calculating....\"), /*#__PURE__*/React.createElement(\"ul\", {\n        class: \"list-group list-group-flush\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"li\", {\n        class: \"list-group-item\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 15\n        }\n      }, \"Note: \", this.state.note), /*#__PURE__*/React.createElement(\"li\", {\n        class: \"list-group-item\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 15\n        }\n      }, \"Key on Piano: \", this.state.pianoKey), /*#__PURE__*/React.createElement(\"li\", {\n        class: \"list-group-item\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 15\n        }\n      }, \"Frequency: \", this.state.frequency), /*#__PURE__*/React.createElement(\"li\", {\n        class: \"list-group-item\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 15\n        }\n      }, \"Fraction: \", this.state.ratio)), /*#__PURE__*/React.createElement(\"div\", {\n        class: \"card-body\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        type: \"button\",\n        class: \"btn btn-outline-success\",\n        onClick: this.handleClick,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 15\n        }\n      }, \"Play notes\")))));\n    }\n\n    return /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"col-form-label col-form-label-lg\",\n      for: \"userInput\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 11\n      }\n    }, \"Semitones\", /*#__PURE__*/React.createElement(\"input\", {\n      className: \"form-control form-control-lg\",\n      type: \"number\",\n      placeholder: \"0\",\n      id: \"userInput\",\n      min: \"-57\",\n      max: \"50\",\n      step: \"1\",\n      value: this.state.number,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"small\", {\n      id: \"semitonesHelp\",\n      className: \"form-text text-muted\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 11\n      }\n    }, \"Enter how many semitones, or half steps you would like to add or subtract from A4 (integer numbers only ranging from -57 to 50).\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      className: \"btn btn-primary btn-lg btn-block\",\n      value: \"Calculate\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n/*  \n  After user submits form, results are rendered and displayed in this component.\n*/\n\n/* unsure how to pass values between components yet effectively\nclass Results extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {freq: 440, note: \"A4\", pianoKey: 49, ratio: \"1\"};\n\n    this.handleClick = this.handleClick.bind(this);\n    updateResults = updateResults.bind(this);\n  }\n  \n  handleClick() {\n    this.setState(state => ({\n      //axios shit\n    }));\n  }\n\n  render() {\n    return (\n      <div class=\"card text-white bg-success mb-3\">\n        <h3 div class=\"card-header\">Results</h3>\n        <div class=\"card-body\">\n          <h4 class=\"card-title\">Consonance/Dissonance?</h4>\n          <p class=\"card-text\">After calculating....</p>\n          <ul class=\"list-group list-group-flush\">\n            <li class=\"list-group-item\">Note: {this.state.note}</li>\n            <li class=\"list-group-item\">Key on Piano: {this.state.pianoKey}</li>\n            <li class=\"list-group-item\">Frequency: {this.state.freq}</li>\n            <li class=\"list-group-item\">Fraction: {this.state.ratio}</li>\n          </ul>\n          <div class=\"card-body\">\n            <button type=\"button\" class=\"btn btn-outline-success\" onClick={this.handleClick}>\n              Play notes</button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n  \n}\n*/\n//ReactDOM.render(<App />, document.getElementById('root'));\n\n\nexport default App;","map":{"version":3,"sources":["/Users/amy/job search career/coding challenges/Go Nimbly 2020/interviewProject_FrequencyMath/frequency-math/src/App.js"],"names":["React","Component","App","render","BaseInput","props","base","freq","note","updateResults","setState","SemitonesForm","constructor","state","number","frequency","logResult","pianoKey","isLoading","error","displayResults","handleChange","bind","handleSubmit","event","target","value","console","log","Math","pow","freqRounded","Number","round","parseFloat","freqDivide","newtonBase","fetch","then","response","ok","json","Error","logResults","result","key","status","preventDefault","message","ratio","handleClick"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n//import ReactDOM from 'react-dom';\nimport 'bootswatch/dist/solar/bootstrap.min.css'; \nimport './App.css';\n\nclass App extends Component {\n  \n  render() {\n    /*  TODO: implement a loading spinner\n    if(!this.props.title) {\n      return(null);\n    }\n    */\n    return(\n      <div>\n        <div className=\"page-header\" id=\"banner\">\n          <h1>Note Frequency Math</h1>\n          <p>Go Nimbly Interview Project by Amy Herz</p>\n        </div>\n        <div className=\"jumbotron\">\n          <div className=\"form-group\">\n            <BaseInput />\n            <SemitonesForm />\n          </div>\n          {/*\n          <div className=\"form-group\">\n            <Results />\n          </div>\n          */}\n        </div>\n      </div>\n    );\n  }\n}\n\n/*  \n  Starting with a base of A4 with a nice integer note frequency of 440.\n  This frequency will remain unchanged as our point of reference.\n*/\nfunction BaseInput(props) {\n  const base = {freq:\"440\", note:\"A4\"};\n  return (\n    <div className=\"form-group\">\n      <fieldset>\n        <label className=\"control-label\" for=\"baseFrequency\">Base Frequency (in Hertz)</label>\n        <input className=\"form-control form-control-lg\" type=\"number\" placeholder=\"440\" id=\"baseFrequency\" readOnly={true} value=\"440\"></input>\n        <small id=\"baseFreqHelp\" className=\"form-text text-muted\">We are starting with the \"Middle A\" (A4) with a frequency of 440Hz</small>\n      </fieldset>\n    </div>\n  );\n}\n\n/*\n  Simple function to set state of other class and pass to results\n*/\nfunction updateResults(freq) {\n  this.setState({freq})\n}\n\n/*  \n  From our base note, user provides number of semitones, or half steps to travel from there.\n  User can input positive number to travel up or negative number to travel down in pitch.\n*/\nclass SemitonesForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      number: 0,              // user inputted number of semitones\n      frequency: 440,         // frequency of resulting note\n      logResult: 0,           // result of log newton API call\n      pianoKey: 49,           // key number on piano\n      isLoading: false,       // true/false if component is loading\n      error: null,            // in case there is an error to display\n      displayResults: false   // render when results are ready\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    //this.calculateFrequency = this.calculateFrequency.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({number: event.target.value});\n  }\n  /*\n  calculateFrequency() {\n    console.log('current state.number entering freq calc:' + this.state.number);\n    this.setState({frequency: 440 * Math.pow(2, (this.state.number / 12))});\n  }\n*/\n  handleSubmit(event) {\n    this.setState({isLoading: true});\n    //this.calculateFrequency();\n    console.log('current state.number entering freq calc:' + this.state.number);\n    //this.setState({frequency: 440 * Math.pow(2, (this.state.number / 12))});\n    \n    const freq = 440 * Math.pow(2, (this.state.number / 12));\n    // additional step to round to two decimal places for readability\n    const freqRounded = Number(Math.round(parseFloat(freq + 'e' + 2)) + 'e-' + 2);\n    this.setState({frequency: freqRounded});\n    console.log('this.state.frequency: ' + this.state.frequency);\n\n    const freqDivide = freq / 440;\n    console.log('freqDivide: ' + freqDivide);\n\n    const newtonBase = 'https://newton.now.sh/';  // base url for newton API calls\n    fetch(newtonBase + 'log/2|' + freqDivide)\n    .then(response => {\n      if(response.ok) {\n        return response.json();\n      } else {\n        throw new Error('Something went wrong...');\n      }\n    }) \n    .then(\n      (logResults) => {\n        this.setState({logResult: logResults.result});\n        console.log('log result: ', logResults);\n        console.log('this.state.logResult: ' + this.state.logResult);\n        const key = 12 * this.state.logResult + 49;\n        this.setState({\n          pianoKey: key,\n          isLoading: false,\n          displayResults: true\n        });\n        console.log('this.pianoKey: ' + this.state.pianoKey);\n      },\n      (error) => {\n        console.log(error);\n        //console.log('error response: ' + error.response);\n        console.log('error status: ' + error.response.status);\n        this.setState({\n          error,\n          isLoading: false,\n          displayResults: false\n        });\n      }\n    )\n    event.preventDefault();\n  }\n  /*\n  passToResults(event) {\n    updateResults(event.target.value);\n  }\n*/\n\n  render() {\n    const { isLoading, error, displayResults } = this.state;\n    if (error) {\n      return <p>{error.message}</p>;\n    }\n\n    if (isLoading) {\n      return <p>Loading...</p>;\n    }\n\n    if (displayResults) {\n      return (\n        <div>\n          <form onSubmit={this.handleSubmit}>\n          <div>\n            <label className=\"col-form-label col-form-label-lg\" for=\"userInput\">Semitones\n              {/*The musical scale goes from C0 to B8, giving us the range of -57 to 50 for semitones options*/}\n              <input className=\"form-control form-control-lg\" type=\"number\" placeholder=\"0\" id=\"userInput\" min=\"-57\" max=\"50\" step=\"1\" value={this.state.number} onChange={this.handleChange}></input>\n            </label>\n            <small id=\"semitonesHelp\" className=\"form-text text-muted\">Enter how many semitones, or half steps you would like to add or subtract from A4 (integer numbers only ranging from -57 to 50).</small>\n            <input type=\"submit\" className=\"btn btn-primary btn-lg btn-block\" value=\"Calculate\" />\n          </div>\n          </form>\n        <br></br>\n        <div class=\"card text-white bg-success mb-3\">\n          <h3 div class=\"card-header\">Results</h3>\n          <div class=\"card-body\">\n            <h4 class=\"card-title\">Consonance/Dissonance?</h4>\n            <p class=\"card-text\">After calculating....</p>\n            <ul class=\"list-group list-group-flush\">\n              <li class=\"list-group-item\">Note: {this.state.note}</li>\n              <li class=\"list-group-item\">Key on Piano: {this.state.pianoKey}</li>\n              <li class=\"list-group-item\">Frequency: {this.state.frequency}</li>\n              <li class=\"list-group-item\">Fraction: {this.state.ratio}</li>\n            </ul>\n            <div class=\"card-body\">\n              <button type=\"button\" class=\"btn btn-outline-success\" onClick={this.handleClick}>\n                Play notes</button>\n            </div>\n          </div>\n        </div>\n      \n        </div>\n      );\n    }\n\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <div>\n          <label className=\"col-form-label col-form-label-lg\" for=\"userInput\">Semitones\n            {/*The musical scale goes from C0 to B8, giving us the range of -57 to 50 for semitones options*/}\n            <input className=\"form-control form-control-lg\" type=\"number\" placeholder=\"0\" id=\"userInput\" min=\"-57\" max=\"50\" step=\"1\" value={this.state.number} onChange={this.handleChange}></input>\n          </label>\n          <small id=\"semitonesHelp\" className=\"form-text text-muted\">Enter how many semitones, or half steps you would like to add or subtract from A4 (integer numbers only ranging from -57 to 50).</small>\n          <input type=\"submit\" className=\"btn btn-primary btn-lg btn-block\" value=\"Calculate\" />\n        </div>\n      </form>\n    );\n  } \n}\n\n\n/*  \n  After user submits form, results are rendered and displayed in this component.\n*/\n/* unsure how to pass values between components yet effectively\nclass Results extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {freq: 440, note: \"A4\", pianoKey: 49, ratio: \"1\"};\n\n    this.handleClick = this.handleClick.bind(this);\n    updateResults = updateResults.bind(this);\n  }\n  \n  handleClick() {\n    this.setState(state => ({\n      //axios shit\n    }));\n  }\n\n  render() {\n    return (\n      <div class=\"card text-white bg-success mb-3\">\n        <h3 div class=\"card-header\">Results</h3>\n        <div class=\"card-body\">\n          <h4 class=\"card-title\">Consonance/Dissonance?</h4>\n          <p class=\"card-text\">After calculating....</p>\n          <ul class=\"list-group list-group-flush\">\n            <li class=\"list-group-item\">Note: {this.state.note}</li>\n            <li class=\"list-group-item\">Key on Piano: {this.state.pianoKey}</li>\n            <li class=\"list-group-item\">Frequency: {this.state.freq}</li>\n            <li class=\"list-group-item\">Fraction: {this.state.ratio}</li>\n          </ul>\n          <div class=\"card-body\">\n            <button type=\"button\" class=\"btn btn-outline-success\" onClick={this.handleClick}>\n              Play notes</button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n  \n}\n*/\n\n//ReactDOM.render(<App />, document.getElementById('root'));\nexport default App;\n"]},"metadata":{},"sourceType":"module"}