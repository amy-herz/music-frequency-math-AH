{"ast":null,"code":"var _jsxFileName = \"/Users/amy/job search career/coding challenges/Go Nimbly 2020/interviewProject_FrequencyMath/frequency-math/src/App.js\";\nimport React, { Component } from 'react'; //import ReactDOM from 'react-dom';\n\nimport 'bootswatch/dist/solar/bootstrap.min.css';\nimport './App.css';\nimport axios from \"axios\";\n\nclass App extends Component {\n  render() {\n    /*  TODO: implement a loading spinner\n    if(!this.props.title) {\n      return(null);\n    }\n    */\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"page-header\",\n      id: \"banner\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 11\n      }\n    }, \"Note Frequency Math\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }\n    }, \"Go Nimbly Interview Project by Amy Herz\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"jumbotron\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(BaseInput, {\n      number: \"440\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(SemitonesForm, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n/*  \n  Starting with a base of A4 with a nice integer note frequency of 440.\n  This frequency will remain unchanged as our point of reference.\n*/\n\n\nfunction BaseInput(props) {\n  const base = {\n    freq: \"440\",\n    note: \"A4\"\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"fieldset\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"control-label\",\n    for: \"baseFrequency\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, \"Base Frequency (in Hertz)\"), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"form-control form-control-lg\",\n    type: \"number\",\n    placeholder: \"440\",\n    id: \"baseFrequency\",\n    readOnly: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"small\", {\n    id: \"baseFreqHelp\",\n    className: \"form-text text-muted\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, \"We are starting with the \\\"Middle A\\\" (A4) with a frequency of 440Hz\")));\n}\n/*\n  Simple function to set state of other class and pass to results\n*/\n\n\nfunction updateFrequency(freq) {\n  this.setState({\n    freq\n  });\n}\n/*  \n  From our base note, user provides number of semitones, or half steps to travel from there.\n  User can input positive number to travel up or negative number to travel down in pitch.\n*/\n\n\nclass SemitonesForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      number: 0,\n      expression: ''\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({\n      number: event.target.value\n    });\n  }\n\n  passToResults(freq) {\n    updateFrequency(freq);\n  }\n\n  handleSubmit(event) {\n    const newtonUrl = 'https://newton.now.sh/simplify/440%2A2%5E(' + this.state.number + '(over)12)';\n    console.log('url for newton api:' + newtonUrl); // the expression we want is 440*2^({semitones}/12), however we need formatted url encoding\n\n    const expression = '440(2%5E(' + this.state.number + '(over)12))';\n    console.log('expression: ' + expression);\n    let result;\n    axios // the expression we want is 440*2^({semitones}/12), however we need url encoding\n    .get('https://newton.now.sh/simplify/440(2%5E(' + this.state.number + '(over)12))').then(function (response) {\n      console.log(response);\n      this.setState({\n        expression: response.data.result\n      });\n      console.log('result is: ' + result); //if(!Number.isInteger(res))\n    }).catch(function (error) {\n      console.log('error: ' + error);\n      console.log('error response: ' + error.response);\n      console.log('error status: ' + error.response.status);\n    });\n    event.preventDefault();\n    console.log('expression outside block: ' + this.expression);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"col-form-label col-form-label-lg\",\n      for: \"userInput\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }\n    }, \"Semitones\", /*#__PURE__*/React.createElement(\"input\", {\n      className: \"form-control form-control-lg\",\n      type: \"number\",\n      placeholder: \"0\",\n      id: \"userInput\",\n      min: \"-57\",\n      max: \"50\",\n      step: \"1\",\n      value: this.state.number,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"small\", {\n      id: \"semitonesHelp\",\n      className: \"form-text text-muted\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }\n    }, \"Enter how many semitones, or half steps you would like to add or subtract from A4 (integer numbers only ranging from -57 to 50).\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      className: \"btn btn-primary btn-lg btn-block\",\n      value: \"Calculate\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n/*  \n  Calculated resulting frequency/note to display along with other information.\n*/\n\n\nclass Results extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      freq: \"440\",\n      note: \"A4\",\n      ratio: \"1\"\n    };\n    this.handleClick = this.handleClick.bind(this);\n    updateFrequency = updateFrequency.bind(this);\n  }\n\n  handleClick() {\n    this.setState(state => ({//axios shit\n    }));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      class: \"card text-white bg-success mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      div: true,\n      class: \"card-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }\n    }, \"Results\"), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"card-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      class: \"card-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 11\n      }\n    }, \"Consonance/Dissonance?\"), /*#__PURE__*/React.createElement(\"p\", {\n      class: \"card-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 11\n      }\n    }, \"After calculating....\"), /*#__PURE__*/React.createElement(\"ul\", {\n      class: \"list-group list-group-flush\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      class: \"list-group-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 13\n      }\n    }, \"Note: \", this.note), /*#__PURE__*/React.createElement(\"li\", {\n      class: \"list-group-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 13\n      }\n    }, \"Frequency: \", this.freq), /*#__PURE__*/React.createElement(\"li\", {\n      class: \"list-group-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 13\n      }\n    }, \"Fraction: \", this.ratio)), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"card-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      class: \"btn btn-outline-success\",\n      onClick: this.handleClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 13\n      }\n    }, \"Play note\"))));\n  }\n\n}\n/*\nclass ResultCalculation extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: 440,   // begin with result equaling our initial note, A, at 440Hz\n    };\n  }\n  \n  state = {\n    calculatedFrequency: []\n  }\n\n  componentDidMount() {\n    fetch()\n    .then(res => res.json())\n    .then((data) => {\n      this.setState({ calculatedFrequency: data })\n    })\n    .catch(console.log)\n  }\n}\n*/\n//ReactDOM.render(<App />, document.getElementById('root'));\n\n\nexport default App;","map":{"version":3,"sources":["/Users/amy/job search career/coding challenges/Go Nimbly 2020/interviewProject_FrequencyMath/frequency-math/src/App.js"],"names":["React","Component","axios","App","render","BaseInput","props","base","freq","note","updateFrequency","setState","SemitonesForm","constructor","state","number","expression","handleChange","bind","handleSubmit","event","target","value","passToResults","newtonUrl","console","log","result","get","then","response","data","catch","error","status","preventDefault","Results","ratio","handleClick"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n//import ReactDOM from 'react-dom';\nimport 'bootswatch/dist/solar/bootstrap.min.css'; \nimport './App.css';\nimport axios from \"axios\";\n\nclass App extends Component {\n  \n  render() {\n    /*  TODO: implement a loading spinner\n    if(!this.props.title) {\n      return(null);\n    }\n    */\n    return(\n      <div>\n        <div className=\"page-header\" id=\"banner\">\n          <h1>Note Frequency Math</h1>\n          <p>Go Nimbly Interview Project by Amy Herz</p>\n        </div>\n        <div className=\"jumbotron\">\n          <div className=\"form-group\">\n            <BaseInput number=\"440\" />\n            <SemitonesForm />\n          </div>\n          <div className=\"form-group\">\n            {/*<Results number=\"440\" /> */}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\n/*  \n  Starting with a base of A4 with a nice integer note frequency of 440.\n  This frequency will remain unchanged as our point of reference.\n*/\nfunction BaseInput(props) {\n  const base = {freq:\"440\", note:\"A4\"};\n  return (\n    <div className=\"form-group\">\n      <fieldset>\n        <label className=\"control-label\" for=\"baseFrequency\">Base Frequency (in Hertz)</label>\n        <input className=\"form-control form-control-lg\" type=\"number\" placeholder=\"440\" id=\"baseFrequency\" readOnly=\"\"></input>\n        <small id=\"baseFreqHelp\" className=\"form-text text-muted\">We are starting with the \"Middle A\" (A4) with a frequency of 440Hz</small>\n      </fieldset>\n    </div>\n  );\n}\n\n/*\n  Simple function to set state of other class and pass to results\n*/\nfunction updateFrequency(freq) {\n  this.setState({freq})\n}\n\n/*  \n  From our base note, user provides number of semitones, or half steps to travel from there.\n  User can input positive number to travel up or negative number to travel down in pitch.\n*/\nclass SemitonesForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {number: 0, expression: ''};\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({number: event.target.value});\n  }\n\n  passToResults(freq) {\n    updateFrequency(freq)\n  }\n\n  handleSubmit(event) {\n    const newtonUrl = 'https://newton.now.sh/simplify/440%2A2%5E(' + this.state.number + '(over)12)';\n    console.log('url for newton api:' + newtonUrl);\n    // the expression we want is 440*2^({semitones}/12), however we need formatted url encoding\n    const expression = '440(2%5E(' + this.state.number + '(over)12))';\n    console.log('expression: ' + expression);\n    let result;\n    axios\n      // the expression we want is 440*2^({semitones}/12), however we need url encoding\n      .get('https://newton.now.sh/simplify/440(2%5E(' + this.state.number + '(over)12))')\n      .then(function(response) {\n        console.log(response);\n        this.setState({expression: response.data.result});\n        console.log('result is: ' + result);\n        //if(!Number.isInteger(res))\n      })\n      .catch(function(error) {\n        console.log('error: ' + error);\n        console.log('error response: ' + error.response);\n        console.log('error status: ' + error.response.status);\n      })\n      event.preventDefault();\n      console.log('expression outside block: ' + this.expression);\n  }\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <div>\n          <label className=\"col-form-label col-form-label-lg\" for=\"userInput\">Semitones\n            {/*The musical scale goes from C0 to B8, giving us the range of -57 to 50 for semitones options*/}\n            <input className=\"form-control form-control-lg\" type=\"number\" placeholder=\"0\" id=\"userInput\" min=\"-57\" max=\"50\" step=\"1\" value={this.state.number} onChange={this.handleChange}></input>\n          </label>\n          <small id=\"semitonesHelp\" className=\"form-text text-muted\">Enter how many semitones, or half steps you would like to add or subtract from A4 (integer numbers only ranging from -57 to 50).</small>\n          <input type=\"submit\" className=\"btn btn-primary btn-lg btn-block\" value=\"Calculate\" />\n        </div>\n      </form>\n    );\n  } \n}\n\n\n/*  \n  Calculated resulting frequency/note to display along with other information.\n*/\nclass Results extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {freq:\"440\", note:\"A4\", ratio:\"1\"};\n\n    this.handleClick = this.handleClick.bind(this);\n    updateFrequency = updateFrequency.bind(this);\n  }\n  \n  handleClick() {\n    this.setState(state => ({\n      //axios shit\n    }));\n  }\n\n  render() {\n    return (\n      <div class=\"card text-white bg-success mb-3\">\n        <h3 div class=\"card-header\">Results</h3>\n        <div class=\"card-body\">\n          <h4 class=\"card-title\">Consonance/Dissonance?</h4>\n          <p class=\"card-text\">After calculating....</p>\n          <ul class=\"list-group list-group-flush\">\n            <li class=\"list-group-item\">Note: {this.note}</li>\n            <li class=\"list-group-item\">Frequency: {this.freq}</li>\n            <li class=\"list-group-item\">Fraction: {this.ratio}</li>\n          </ul>\n          <div class=\"card-body\">\n            <button type=\"button\" class=\"btn btn-outline-success\" onClick={this.handleClick}>\n              Play note</button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n  \n}\n\n/*\nclass ResultCalculation extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: 440,   // begin with result equaling our initial note, A, at 440Hz\n    };\n  }\n  \n  state = {\n    calculatedFrequency: []\n  }\n\n  componentDidMount() {\n    fetch()\n    .then(res => res.json())\n    .then((data) => {\n      this.setState({ calculatedFrequency: data })\n    })\n    .catch(console.log)\n  }\n}\n*/\n\n//ReactDOM.render(<App />, document.getElementById('root'));\nexport default App;\n"]},"metadata":{},"sourceType":"module"}